@*EditContact *@  
@page "/contacts/edit/{contactId:int}"
@attribute [Authorize]
@rendermode InteractiveAuto

@inject IContactDTOService contactService
@inject NavigationManager navManager

@inherits AuthenticatedComponentBase

<PageTitle>Black Book Pro | Edit @EditName</PageTitle>

@if (contact is not null)
{
    <div class="container">
        <h2 class="mt-3">Edit @EditName</h2>
            <div class="p-3 my-3 glass-cf-style">
            <ContactForm Contact="contact" OnSubmit="HandleSubmit" />
        </div>
    </div>
}

@code {

    [Parameter]
    public int ContactId { get; set; }

   public ContactDTO? contact;
    private string EditName => contact?.FullName ?? "Loading . . .";

    protected override async Task OnInitializedWithAuthAsync()
    {
       
        contact = await contactService.GetContactByIdAsync(ContactId, UserInfo!.UserId);
        if (contact is null) navManager.NavigateTo("/contacts");

    }

    private async Task HandleSubmit(ContactDTO contact)
    {
        if (UserInfo is not null)
        {
            //Call service to update
            await contactService.UpdateContactAsync(contact, UserInfo.UserId);
            //nav back to contacts page;
            navManager.NavigateTo("/contacts");
        }
    }
}
